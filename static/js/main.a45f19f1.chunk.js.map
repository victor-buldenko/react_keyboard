{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","message","keyboardHandler","event","x","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,MAFT,EAKEC,QAAU,0BALZ,EAeEC,gBAAkB,SAACC,GACjB,IAAMC,EAAkB,MAAdD,EAAMH,IAAc,QAAUG,EAAMH,IAE9C,EAAKK,SAAS,CAAEL,IAAKI,KAlBzB,uDAOE,WACEE,SAASC,iBAAiB,QAASC,KAAKN,mBAR5C,kCAWE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,mBAZ/C,oBAqBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKT,MAAMC,IAAX,mCAC+BQ,KAAKT,MAAMC,IAD1C,KAEG,kCA3Bd,GAAyBW,a,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.a45f19f1.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport class App extends Component {\n  state = {\n    key: null,\n  };\n\n  message = 'Nothing was pressed yet';\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.keyboardHandler);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.keyboardHandler);\n  }\n\n  keyboardHandler = (event: KeyboardEvent): void => {\n    const x = event.key === ' ' ? 'Space' : event.key;\n\n    this.setState({ key: x });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.key\n            ? `The last pressed key is [${this.state.key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}